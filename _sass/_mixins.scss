// Sass Mixins

// Applies the given styling to a media query
@mixin layout($layout) {
  $width: map-get($layout-widths, $layout);
  @media only screen and (max-width: $width) {
    @content;
  }
}

// Mixins for vendor-prefixed properties

@mixin display-flex() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@mixin align-items($alignment) {
  @if $alignment == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $alignment == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  }
  align-items: $alignment;
}

@mixin flex-shrink($number) {
  -webkit-flex-shrink: $number;
  -ms-flex-negative: $number;
  flex-shrink: $number;
}

@mixin flex-grow($number) {
  -webkit-box-flex: $number;
  -ms-flex-positive: $number;
  flex-grow: $number;
}

@mixin hyphens($value) {
  -webkit-hyphens: $value;
  -ms-hyphens: $value;
  hyphens: $value;
}

@mixin transform($value) {
  -webkit-transform: $value;
  -ms-transform: $value;
  transform: $value;
}

// Mixins for overlay menus

$menu-background-color: rgba(#000, 0.8);
$menu-arrow-width: 26px;
$menu-border-radius: 5px;
$menu-offset-right: -4px;

// Enables a fade transition for the given element (also initially hides it)
@mixin transition-fade() {
  opacity: 0;
  z-index: -1;
  transition-property: opacity, z-index;
  transition-duration: $transition-duration, $transition-duration * 2;
  transition-timing-function: $transition-easing;
}

// Fade in the given element (one for which fade transition has been enabled)
@mixin transition-fade-in() {
  opacity: 1;
  z-index: 9999;
  transition-property: opacity;
  transition-duration: $transition-duration;
}

@mixin floating-menu($position) {
  @include transition-fade();
  border-radius: $menu-border-radius;
  background-color: $menu-background-color;
  position: absolute;
  top: 100%;
  @if $position == 'center' {
    right: 50%;
    @include transform(translateX(50%));
  } @else {
    right: $menu-offset-right;
  }
  &:after {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $menu-arrow-width / 2;
    border-top-width: 0;
    border-color: transparent;
    border-bottom-color: $menu-background-color;
    position: absolute;
    top: -$menu-arrow-width / 2;
    @include transform(translateX(50%));
    @if $position == 'center' {
      right: 50%;
    } @else {
      right: ($menu-border-radius + $menu-arrow-width / 2 + $position - $menu-offset-right);
    }
  }
}
