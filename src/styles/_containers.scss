// Styling for various container elements

* {
  box-sizing: border-box;
}

html {
  font-size: 100%;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

body {
  max-width: $body-max-width;
  min-width: 320px;
  margin: 0 auto;
  padding: 0;
  background-color: var(--color-body-background);
  font-family: var(--font-family-sans-serif);
  font-weight: var(--font-weight-normal);
  font-size: 0;
  color: var(--color-text);
}

.background {
  opacity: 0.5;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  background-image: url('/images/backgrounds/floorboards-vertical.svg');
  background-repeat: repeat;
}

article.page {
  // When the page is transioning to another, both section.page-content child
  // containers will be in the DOM at the same time; because we want to achieve
  // a crossfade effect, we can use CSS Grid to superimpose the second child
  // container above the first while not sacrificing the height of the parent
  // container (source: <https://stackoverflow.com/a/50086485/560642>)
  display: grid;
  grid-template-columns: 1fr;
  position: relative;
  margin: 0 auto;
  --page-padding-v: 30px;
  --page-padding-h: 30px;
  padding: var(--page-padding-v) var(--page-padding-h);
  border-radius: 20px;
  background-color: var(--color-main-background);
  @include layout(compact) {
    --page-padding-h: 20px;
    border-radius: 0;
  }
  @include layout(very-compact) {
    --page-padding-h: 15px;
  }
}

.page-content {
  // See comment above about use of CSS grid to overlap page content containers
  grid-row-start: 1;
  grid-column-start: 1;
}
